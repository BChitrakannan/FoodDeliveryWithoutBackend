{"ast":null,"code":"var _jsxFileName = \"/Users/chitrakannanb/Documents/ReactLearning/FoodDeliveryApp/01-starting-project/src/Components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport style from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getItems = async () => {\n      const response = await fetch(\"https://react-http-9cc8d-default-rtdb.asia-southeast1.firebasedatabase.app/meas.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong...\");\n      } else {\n        const data = await response.json();\n        const loadedMeals = [];\n\n        for (const key in data) {\n          loadedMeals.push({\n            id: key,\n            name: data[key].name,\n            description: data[key].description,\n            price: data[key].price\n          });\n        }\n\n        setMeals(loadedMeals);\n      }\n\n      setIsLoading(false);\n    };\n\n    getItems().catch(error => {\n      setIsLoading(false);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: style.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading the meals.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  const MealList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: style.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error Loading \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: MealList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"Iiz9r13wHP3oUKY8Pc8nCUik7ZA=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/chitrakannanb/Documents/ReactLearning/FoodDeliveryApp/01-starting-project/src/Components/Meals/AvailableMeals.js"],"names":["React","useEffect","useState","Card","style","MealItem","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","getItems","response","fetch","ok","Error","data","json","loadedMeals","key","push","id","name","description","price","catch","mealsLoading","MealList","map","meal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AACA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAMG,QAAQ,GAAG,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sFAD0B,CAA5B;;AAGA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD,OAFD,MAEO;AACL,cAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,cAAMC,WAAW,GAAG,EAApB;;AACA,aAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACtBE,UAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,YAAAA,EAAE,EAAEF,GADW;AAEfG,YAAAA,IAAI,EAAEN,IAAI,CAACG,GAAD,CAAJ,CAAUG,IAFD;AAGfC,YAAAA,WAAW,EAAEP,IAAI,CAACG,GAAD,CAAJ,CAAUI,WAHR;AAIfC,YAAAA,KAAK,EAAER,IAAI,CAACG,GAAD,CAAJ,CAAUK;AAJF,WAAjB;AAMD;;AACDlB,QAAAA,QAAQ,CAACY,WAAD,CAAR;AACD;;AACDV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KApBD;;AAsBAG,IAAAA,QAAQ,GAAGc,KAAX,CAAkBhB,KAAD,IAAW;AAC1BD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD;AAGD,GA3BQ,EA2BN,EA3BM,CAAT;;AA6BA,MAAID,SAAJ,EAAe;AACb,wBACE;AAAS,MAAA,SAAS,EAAEL,KAAK,CAACwB,YAA1B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAMC,QAAQ,GAAGtB,KAAK,CAACuB,GAAN,CAAWC,IAAD,iBACzB,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACR,EAFX;AAGE,IAAA,IAAI,EAAEQ,IAAI,CAACP,IAHb;AAIE,IAAA,WAAW,EAAEO,IAAI,CAACN,WAJpB;AAKE,IAAA,KAAK,EAAEM,IAAI,CAACL;AALd,KACOK,IAAI,CAACR,EADZ;AAAA;AAAA;AAAA;AAAA,UADe,CAAjB;AASA,sBACE;AAAS,IAAA,SAAS,EAAEnB,KAAK,CAACG,KAA1B;AAAA,2BACE,QAAC,IAAD;AAAA,gBAAOI,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,gBAA2B;AAAA,kBAAKkB;AAAL;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxDD;;GAAMvB,c;;KAAAA,c;AA0DN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport style from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getItems = async () => {\n      const response = await fetch(\n        \"https://react-http-9cc8d-default-rtdb.asia-southeast1.firebasedatabase.app/meas.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong...\");\n      } else {\n        const data = await response.json();\n        const loadedMeals = [];\n        for (const key in data) {\n          loadedMeals.push({\n            id: key,\n            name: data[key].name,\n            description: data[key].description,\n            price: data[key].price,\n          });\n        }\n        setMeals(loadedMeals);\n      }\n      setIsLoading(false);\n    };\n\n    getItems().catch((error) => {\n      setIsLoading(false);\n    });\n  }, []);\n\n  if (isLoading) {\n    return (\n      <section className={style.mealsLoading}>\n        <p>Loading the meals.....</p>\n      </section>\n    );\n  }\n\n  const MealList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    ></MealItem>\n  ));\n  return (\n    <section className={style.meals}>\n      <Card>{error ? <p>Error Loading </p> : <ul>{MealList}</ul>}</Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}