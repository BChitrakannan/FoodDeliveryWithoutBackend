{"ast":null,"code":"var _jsxFileName = \"/Users/chitrakannanb/Documents/ReactLearning/FoodDeliveryApp/01-starting-project/src/Store/CartContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./CartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  item: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  console.log(\"initial state \" + state.item.totalAmount);\n\n  if (action.type === \"ADD\") {\n    const updatedItem = state.item.concat(action.item);\n    console.log(\"Qty is \" + action.item.amount);\n    const updatedTotalAmount = state.item.totalAmount + action.item.amount * action.item.price;\n    console.log(\"qty is \" + updatedTotalAmount);\n    return {\n      item: updatedItem,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultState;\n};\n\nconst CartContextProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultState);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      value: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.item,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartContextProvider, \"xNoVBhzo/FaQK+pVUAMBgGK+qwI=\");\n\n_c = CartContextProvider;\nexport default CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["/Users/chitrakannanb/Documents/ReactLearning/FoodDeliveryApp/01-starting-project/src/Store/CartContextProvider.js"],"names":["React","useReducer","CartContext","defaultState","item","totalAmount","cartReducer","state","action","console","log","type","updatedItem","concat","amount","updatedTotalAmount","price","CartContextProvider","props","cartState","dispatchCartAction","addItemHandler","removeItemHandler","id","value","cartContext","items","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBH,KAAK,CAACH,IAAN,CAAWC,WAA1C;;AACA,MAAIG,MAAM,CAACG,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,WAAW,GAAGL,KAAK,CAACH,IAAN,CAAWS,MAAX,CAAkBL,MAAM,CAACJ,IAAzB,CAApB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,MAAM,CAACJ,IAAP,CAAYU,MAApC;AACA,UAAMC,kBAAkB,GACtBR,KAAK,CAACH,IAAN,CAAWC,WAAX,GAAyBG,MAAM,CAACJ,IAAP,CAAYU,MAAZ,GAAqBN,MAAM,CAACJ,IAAP,CAAYY,KAD5D;AAEAP,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYK,kBAAxB;AAEA,WAAO;AAAEX,MAAAA,IAAI,EAAEQ,WAAR;AAAqBP,MAAAA,WAAW,EAAEU;AAAlC,KAAP;AACD;;AACD,SAAOZ,YAAP;AACD,CAZD;;AAaA,MAAMc,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCnB,UAAU,CAACK,WAAD,EAAcH,YAAd,CAAlD;;AAEA,QAAMkB,cAAc,GAAIjB,IAAD,IAAU;AAC/BgB,IAAAA,kBAAkB,CAAC;AAAET,MAAAA,IAAI,EAAE,KAAR;AAAeP,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMkB,iBAAiB,GAAIC,EAAD,IAAQ;AAChCH,IAAAA,kBAAkB,CAAC;AAAET,MAAAA,IAAI,EAAE,QAAR;AAAkBa,MAAAA,KAAK,EAAED;AAAzB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG;AAClBC,IAAAA,KAAK,EAAEP,SAAS,CAACf,IADC;AAElBC,IAAAA,WAAW,EAAEc,SAAS,CAACd,WAFL;AAGlBsB,IAAAA,OAAO,EAAEN,cAHS;AAIlBO,IAAAA,UAAU,EAAEN;AAJM,GAApB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,WAA7B;AAAA,cACGP,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CArBD;;GAAMZ,mB;;KAAAA,mB;AAuBN,eAAeA,mBAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport CartContext from \"./CartContext\";\n\nconst defaultState = {\n  item: [],\n  totalAmount: 0,\n};\nconst cartReducer = (state, action) => {\n  console.log(\"initial state \" + state.item.totalAmount);\n  if (action.type === \"ADD\") {\n    const updatedItem = state.item.concat(action.item);\n    console.log(\"Qty is \" + action.item.amount);\n    const updatedTotalAmount =\n      state.item.totalAmount + action.item.amount * action.item.price;\n    console.log(\"qty is \" + updatedTotalAmount);\n\n    return { item: updatedItem, totalAmount: updatedTotalAmount };\n  }\n  return defaultState;\n};\nconst CartContextProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultState);\n\n  const addItemHandler = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n  const removeItemHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", value: id });\n  };\n\n  const cartContext = {\n    items: cartState.item,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler,\n  };\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartContextProvider;\n"]},"metadata":{},"sourceType":"module"}